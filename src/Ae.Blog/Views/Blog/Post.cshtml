@using Ae.Blog.Extensions;
@model Ae.Blog.Models.Post
<article>
    @if (Model.IsSingle)
    {
        <h2>@Model.Title</h2>
    }
    else
    {
        <h2><a href="@Model.Url">@Model.Title</a></h2>
    }

    @if (Model.Updated.HasValue && (Model.Updated.Value - Model.Published > TimeSpan.FromDays(5)))
    {
        <p class="meta">Posted @Model.Published.ToOrdinalWords(), last updated @Model.Updated.Value.ToOrdinalWords() in <a href="@Model.CategoryUrl">@Model.Category</a><span id="dynamic-comment-count"></span></p>
    }
    else
    {
        <p class="meta">Posted @Model.Published.ToOrdinalWords() in <a href="@Model.CategoryUrl">@Model.Category</a><span id="dynamic-comment-count"></span></p>
    }

    @if (Model.IsSingle)
    {
        <script>
            fetch("https://alanedwardes.com/api/commentcount.json?slug=@(Model.Slug)")
                .then(data => data.json())
                .then(data => {
                    let commentsCount = data.count;
                    let commentsInfo = document.getElementById('dynamic-comment-count');
                    commentsInfo.innerHTML = ' with <a href="#comments">' + commentsCount + ' ' + (commentsCount === 1 ? 'comment' : 'comments') + '</a>';
                });
        </script>
    }

    @Html.Raw(Model.GetMarkdown())
    @if (Model.HasSummary && !Model.IsSingle)
    {
        <p><a href="@Model.Url">Continue Reading &raquo;</a></p>
    }
</article>
