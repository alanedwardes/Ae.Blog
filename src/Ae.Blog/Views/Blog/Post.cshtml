@using Ae.Blog.Extensions;
@model Ae.Blog.Models.Post
<article>
    @if (Model.IsSingle)
    {
        <h2>@Model.Title</h2>
    }
    else
    {
        <h2><a href="@Model.Url">@Model.Title</a></h2>
    }

    <p class="meta">
        @if (Model.Updated.HasValue && (Model.Updated.Value - Model.Published > TimeSpan.FromDays(5)))
        {
            <span>Posted @Model.Published.ToOrdinalWords(), updated @Model.Updated.Value.ToOrdinalWords()</span>
        }
        else
        {
            <span>Posted @Model.Published.ToOrdinalWords()</span>
        }

        <span> in <a href="@Model.CategoryUrl">@Model.Category</a></span>

        <span id="dynamic-comment-count"></span>
    </p>

        @if (Model.IsSingle)
        {
            <script>
        fetch("https://alanedwardes.com/api/commentcount.json?slug=@(Model.Slug)")
            .then(data => data.json())
            .then(data => {
                let commentsCount = data.count;
                let commentsInfo = document.getElementById('dynamic-comment-count');
                commentsInfo.innerHTML = ' with <a href="#comments">' + commentsCount + ' ' + (commentsCount === 1 ? 'comment' : 'comments') + '</a>';
            });
            </script>
        }

        @Html.Raw(Model.GetMarkdown())
        @if (Model.HasSummary && !Model.IsSingle)
        {
            <p><a href="@Model.Url">Continue Reading &raquo;</a></p>
        }

        @if (Model.IsSingle)
        {
            var wordStatistics = new Dictionary<string, int>();
            Model.GetWordStatistics(wordStatistics);
            var topWords = wordStatistics.OrderByDescending(x => x.Value).Take(10);

            <p class="meta">
                <span>Tagged </span>

                @foreach (var topWord in topWords)
                {
                    <a href="/blog/words/@Uri.EscapeDataString(topWord.Key)/">@topWord.Key</a>
                }
            </p>
        }
    </article>
